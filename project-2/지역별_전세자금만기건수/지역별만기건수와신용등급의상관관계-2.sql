SELECT * FROM LEASE_EXPIRE;

-- [LEASE_EXPIRE]
-- 지역별 도래 건수
SELECT GU, SUM(COUNT) AS COUNT
FROM LEASE_EXPIRE
GROUP BY GU;

-- 지역별 도래건수 순위
SELECT GU, SUM(COUNT) AS COUNT, DENSE_RANK() OVER (ORDER BY SUM(COUNT) DESC) DENSE_RANK
FROM LEASE_EXPIRE
GROUP BY GU;



-- [JOIN] COUNT와 CREDIT_LIMIT의 상관관계
-- 등가 조인 
/*
SELECT L.GU, L.COUNT, C.CREDIT_LIMIT
FROM LEASE_EXPIRE L, CUSTOMER C
WHERE L.GU = C.GU;
*/

SELECT L.GU, L.COUNT, C.CREDIT_LIMIT
FROM (
    SELECT GU, SUM(COUNT) AS COUNT
    FROM LEASE_EXPIRE
    GROUP BY GU
) L, (
    SELECT TRUNC(AVG(NVL(CREDIT_LIMIT, 0))) AS CREDIT_LIMIT, SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' ')) AS GU
    FROM CUSTOMER
    WHERE ADDRESS1 LIKE '%서울%'
    GROUP BY SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' '))
) C
WHERE L.GU = C.GU;



-- [JOIN] COUNT 순위와 CREDIT_LIMIT 순위의 상관관계
-- OUTER JOIN : (+) 사용해서 JOIN조건을 만족하지 않는 경우의 데이터도 출력
SELECT L.GU, L.DENSE_RANK, C.DENSE_RANK
FROM (
    SELECT GU, SUM(COUNT) AS COUNT, DENSE_RANK() OVER (ORDER BY SUM(COUNT) DESC) DENSE_RANK
    FROM LEASE_EXPIRE
    GROUP BY GU
) L, (
    SELECT TRUNC(AVG(NVL(CREDIT_LIMIT, 0))) AS CREDIT_LIMIT, SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' ')) AS GU
    , DENSE_RANK() OVER (ORDER BY TRUNC(AVG(NVL(CREDIT_LIMIT, 0))) DESC) DENSE_RANK
    FROM CUSTOMER
    WHERE ADDRESS1 LIKE '%서울%'
    GROUP BY SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' '))
) C
WHERE L.GU(+) = C.GU
ORDER BY C.DENSE_RANK;



-- [JOIN] COUNT 순위와 CREDIT_LIMIT 순위의 상관관계
-- 등가 JOIN : 사용해서 JOIN조건을 만족하지 않는 경우의 데이터는 뺌
SELECT L.GU, L.DENSE_RANK, C.DENSE_RANK
FROM (
    SELECT GU, SUM(COUNT) AS COUNT, DENSE_RANK() OVER (ORDER BY SUM(COUNT) DESC) DENSE_RANK
    FROM LEASE_EXPIRE
    GROUP BY GU
) L, (
    SELECT TRUNC(AVG(NVL(CREDIT_LIMIT, 0))) AS CREDIT_LIMIT, SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' ')) AS GU
    , DENSE_RANK() OVER (ORDER BY TRUNC(AVG(NVL(CREDIT_LIMIT, 0))) DESC) DENSE_RANK
    FROM CUSTOMER
    WHERE ADDRESS1 LIKE '%서울%'
    GROUP BY SUBSTR(ADDRESS1, 4,INSTR(ADDRESS1, ' '))
) C
WHERE L.GU = C.GU
ORDER BY C.DENSE_RANK;
